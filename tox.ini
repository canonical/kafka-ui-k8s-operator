# Copyright 2025 Canonical
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = format, lint, static, unit
min_version = 4.0.0

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
;lib_path = {tox_root}/lib/charms/operator_name_with_underscores
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
allowlist_externals =
    poetry
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
deps =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands =
    poetry install --only lint
    poetry run ruff format {[vars]all_path}
    poetry run ruff check --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    # if this charm owns a lib, uncomment "lib_path" variable
    # and uncomment the following line
    # codespell {[vars]lib_path}
    poetry install --only lint
    poetry run codespell {tox_root}
    poetry run ruff check {[vars]all_path}
    poetry run ruff format --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
commands =
    poetry install --with unit
    poetry run \
    coverage run --source={[vars]src_path} -m pytest \
        -v \
        -s \
        --tb native \
        {[vars]tests_path}/unit \
        {posargs}
    poetry run coverage report

[testenv:integration]
description = Run integration tests
pass_env =
    {[testenv]pass_env}
    CI
commands =
    poetry install --with integration
    poetry run \
    pytest \
        -v \
        -s \
        --tb native \
        --log-cli-level=INFO \
        {[vars]tests_path}/integration \
        {posargs}
